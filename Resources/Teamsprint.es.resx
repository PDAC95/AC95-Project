<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AgileDevelopmentTeams" xml:space="preserve">
    <value>Equipos de Desarrollo Agile</value>
  </data>
  <data name="CustomSprintEngagement" xml:space="preserve">
    <value>Compromiso Personalizado por Sprint</value>
  </data>
  <data name="FlexibleRolesperSprint" xml:space="preserve">
    <value>Roles Flexibles por Sprint</value>
  </data>
  <data name="fora" xml:space="preserve">
    <value>por</value>
  </data>
  <data name="Hirea" xml:space="preserve">
    <value>Contrata un</value>
  </data>
  <data name="HireaTeamforaSprint" xml:space="preserve">
    <value>Contrata un Equipo por Sprint</value>
  </data>
  <data name="Hiring" xml:space="preserve">
    <value>Contratación</value>
  </data>
  <data name="Solutions" xml:space="preserve">
    <value>por Sprint</value>
  </data>
  <data name="Sprint" xml:space="preserve">
    <value>Sprint</value>
  </data>
  <data name="Sprint-Based" xml:space="preserve">
    <value>Soluciones de</value>
  </data>
  <data name="SprintManagement" xml:space="preserve">
    <value>Gestión de Sprint</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>Equipo</value>
  </data>
  <data name="Text1" xml:space="preserve">
    <value>Con AC95, puedes contratar expertos por un solo sprint. Esta opción es ideal para proyectos que requieren ejecución rápida o para agregar roles especializados a tu equipo actual, como desarrolladores, diseñadores, ingenieros de QA y más. Ofrecemos una contratación flexible adaptada a las necesidades de tu sprint, asegurando una colaboración fluida y una entrega eficiente.</value>
  </data>
  <data name="Text2" xml:space="preserve">
    <value>Contrata un equipo multifuncional o expertos individuales como desarrolladores frontend o backend, ingenieros de QA, DevOps y más para tu sprint. Nuestros profesionales se integran perfectamente con tu equipo, garantizando resultados rápidos y de alta calidad alineados con metodologías ágiles.</value>
  </data>
  <data name="Text3" xml:space="preserve">
    <value>Podemos gestionar todo el sprint por ti, asegurando que las tareas se prioricen, los equipos estén sincronizados y los entregables cumplan con los plazos. Deja que nuestros experimentados scrum masters y gestores de proyectos se encarguen de la coordinación mientras tú te enfocas en los objetivos de tu negocio.</value>
  </data>
  <data name="Text4" xml:space="preserve">
    <value>Cada sprint es único, y lo mismo ocurre con los roles que puedas necesitar. Ya sea un desarrollador frontend, un tester de QA o un diseñador UX por un solo sprint, te proporcionamos la experiencia exacta para mantener tu proyecto en marcha.</value>
  </data>
  <data name="Text5" xml:space="preserve">
    <value>Tú decides el nivel de control que deseas. Puedes gestionar el sprint con los miembros adicionales que contrates o dejar que nosotros nos encarguemos de todo, desde la asignación de tareas hasta la revisión del sprint. Este compromiso personalizado garantiza la flexibilidad que tu proyecto necesita.</value>
  </data>
</root>