<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BackupRecovery" xml:space="preserve">
    <value>Backup &amp; Recovery</value>
  </data>
  <data name="FeatureUpdates" xml:space="preserve">
    <value>Feature Updates &amp; Enhancements</value>
  </data>
  <data name="MaintenanceSub" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="MaintenanceTitle" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="MonthlySoftwareMaintenance" xml:space="preserve">
    <value>Monthly Software Maintenance</value>
  </data>
  <data name="MonthlySub" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="MonthlyTitle" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="OurTitle" xml:space="preserve">
    <value>Our</value>
  </data>
  <data name="PerformanceOptimization" xml:space="preserve">
    <value>Performance Optimization</value>
  </data>
  <data name="SecurityUpdates" xml:space="preserve">
    <value>Security Updates &amp; Monitoring</value>
  </data>
  <data name="SoftwareMaintenance" xml:space="preserve">
    <value>Software Maintenance</value>
  </data>
  <data name="SoftwareSub" xml:space="preserve">
    <value>Software</value>
  </data>
  <data name="SoftwareTitle" xml:space="preserve">
    <value>Software</value>
  </data>
  <data name="Text1" xml:space="preserve">
    <value>Ensure your software runs smoothly with our comprehensive monthly SaaS maintenance and optimization services. We manage everything from performance tuning to security updates, keeping your software up-to-date and your users satisfied.</value>
  </data>
  <data name="Text2" xml:space="preserve">
    <value>We provide ongoing maintenance to ensure your software runs at optimal performance. From updates and patches to bug fixes, we make sure your SaaS solution remains reliable and fully functional for your users.</value>
  </data>
  <data name="Text3" xml:space="preserve">
    <value>We optimize your software for better performance, ensuring fast load times, smooth functionality, and minimal downtime. Our performance enhancements help reduce user frustration and increase overall satisfaction.</value>
  </data>
  <data name="Text4" xml:space="preserve">
    <value>We ensure your software remains secure with regular security updates and ongoing monitoring. Our team addresses potential vulnerabilities, keeping your data and user information safe.</value>
  </data>
  <data name="Text5" xml:space="preserve">
    <value>Our support team is available to assist your users with any issues or inquiries. We quickly resolve user-reported issues, ensuring minimal downtime and a positive user experience.</value>
  </data>
  <data name="Text6" xml:space="preserve">
    <value>We provide regular updates to add new features and improve existing functionalities based on user feedback and market trends. This helps keep your software competitive and aligned with user needs.</value>
  </data>
  <data name="Text7" xml:space="preserve">
    <value>We ensure that your software’s data is backed up regularly and provide recovery solutions in case of unexpected issues. This service guarantees that your software and data remain safe, with minimal disruption to your users.</value>
  </data>
  <data name="UserSupport" xml:space="preserve">
    <value>User Support &amp; Issue Resolution</value>
  </data>
</root>